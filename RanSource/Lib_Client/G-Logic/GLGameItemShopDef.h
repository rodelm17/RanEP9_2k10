/*!
 * \file GLGameItemShopDef.h
 *
 * \author Juver
 * \date 2021/11/03
 *
 * 
 */

#ifndef GLGAMEITEMSHOPDEF_H_INCLUDED__
#define GLGAMEITEMSHOPDEF_H_INCLUDED__

#include "../../Lib_Engine/G-Logic/GLDefine.h"

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#define GAME_ITEM_SHOP_INDEX_NULL 0
#define GAME_ITEM_SHOP_NAME_SIZE 64
#define GAME_ITEM_SHOP_IMAGE_SIZE 32
#define GAME_ITEM_SHOP_OPEN_COOLTIME 20
#define GAME_ITEM_SHOP_PURCHASE_COOLTIME 6
#define GAME_ITEM_SHOP_UPDATE_NUM 100
#define GAME_ITEM_SHOP_RELOAD_START_TIMER 60

#define GAME_ITEM_SHOP_MSG_KEY1  535993
#define GAME_ITEM_SHOP_MSG_KEY2  144364

enum GAME_ITEM_SHOP_TYPE
{
	GAME_ITEM_SHOP_TYPE_NONE	= 0,
	GAME_ITEM_SHOP_TYPE_POINT	= 1,
	GAME_ITEM_SHOP_TYPE_VOTE	= 2,
	GAME_ITEM_SHOP_TYPE_SIZE	= 3,
};

enum GAME_ITEM_SHOP_CATEGORY
{
	GAME_ITEM_SHOP_CATEGORY_SPECIAL		= 0,
	GAME_ITEM_SHOP_CATEGORY_CONSUMABLE	= 1,
	GAME_ITEM_SHOP_CATEGORY_WEARABLE	= 2,
	GAME_ITEM_SHOP_CATEGORY_ACCESSORY	= 3,
	GAME_ITEM_SHOP_CATEGORY_PET			= 4,
	GAME_ITEM_SHOP_CATEGORY_VEHICLE		= 5,

	GAME_ITEM_SHOP_CATEGORY_SIZE		= 6,
};

struct SGAME_ITEM_SHOP_DATA
{
	WORD wIndex;
	WORD wProductNum;
	SNATIVEID sItemID;
	WORD wCategory;
	WORD wStock;
	WORD wPrice;
	WORD wType;


	
	SGAME_ITEM_SHOP_DATA();
	~SGAME_ITEM_SHOP_DATA();

	bool operator < ( const SGAME_ITEM_SHOP_DATA& sData );
	SGAME_ITEM_SHOP_DATA& operator= ( const SGAME_ITEM_SHOP_DATA &cData );
};

typedef std::map<WORD, SGAME_ITEM_SHOP_DATA>		SGAME_ITEM_SHOP_DATA_MAP;
typedef SGAME_ITEM_SHOP_DATA_MAP::iterator			SGAME_ITEM_SHOP_DATA_MAP_ITER;
typedef SGAME_ITEM_SHOP_DATA_MAP::const_iterator	SGAME_ITEM_SHOP_DATA_MAP_CITER;
typedef std::vector<SGAME_ITEM_SHOP_DATA>			SGAME_ITEM_SHOP_DATA_VEC;

struct SGAME_ITEM_SHOP_POINT_INFO
{
	DWORD dwUserID;
	DWORD dwUserPoint;
	DWORD dwVotePoint;
	BOOL bUserPointUpdate;
	BOOL bVotePointUpdate;

	SGAME_ITEM_SHOP_POINT_INFO();
	~SGAME_ITEM_SHOP_POINT_INFO();
};

typedef std::map<DWORD, SGAME_ITEM_SHOP_POINT_INFO>			SGAME_ITEM_SHOP_POINT_INFO_MAP;
typedef SGAME_ITEM_SHOP_POINT_INFO_MAP::iterator			SGAME_ITEM_SHOP_POINT_INFO_MAP_ITER;
typedef SGAME_ITEM_SHOP_POINT_INFO_MAP::const_iterator		SGAME_ITEM_SHOP_POINT_INFO_MAP_CITER;
typedef std::vector<SGAME_ITEM_SHOP_POINT_INFO_MAP_ITER>	GAME_ITEM_SHOP_POINT_INFO_VEC;;

namespace COMMENT 
{
	extern std::string GAME_ITEM_SHOP_TYPE[GAME_ITEM_SHOP_TYPE_SIZE];
	extern std::string GAME_ITEM_SHOP_CATEGORY[GAME_ITEM_SHOP_CATEGORY_SIZE];
};	


#endif // GLGAMEITEMSHOPDEF_H_INCLUDED__
