#ifndef NSRINFO_H__INCLUDED
#define NSRINFO_H__INCLUDED

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

enum EMRINFO
{
	EMRINFO_RAN_ONLINE					= 0,

	EMRINFO_FILE_NAME_DBSLASH,
	EMRINFO_FILE_NAME_RPARAM,
	EMRINFO_FILE_NAME_ROPTION,

	EMRINFO_LOG_FILE_NAME,
	EMRINFO_LOG_TIME_FORMAT,
	EMRINFO_XML_FILE_EXT_ENCRYPT,
	EMRINFO_XML_FILE_EXT_DECRYPT,

	EMRINFO_ERROR_RPARAM_LOAD,
	EMRINFO_ERROR_ROPTION_LOAD,
	EMRINFO_ERROR_RPROFILE_LOAD_CHAR_NAME,

	EMRINFO_ERROR_GLCURRENCY_SHOP_LOAD,
	EMRINFO_ERROR_GLCURRENCY_SHOP_LOAD_EXIST,

	EMRINFO_ERROR_GLNPC_SHOP_LOAD,
	EMRINFO_ERROR_GLNPC_SHOP_LOAD_EXIST_TYPE,
	EMRINFO_ERROR_GLNPC_SHOP_LOAD_EXIST_ITEM,
	EMRINFO_ERROR_GLNPC_SHOP_LOAD_ITEM_NO_TYPE,

	EMRINFO_ERROR_GLITEM_EXCHANGE_LOAD,
	EMRINFO_ERROR_GLITEM_EXCHANGE_LOAD_EXIST,

	EMRINFO_ERROR_GLCROW_SALE_LOAD,
	EMRINFO_ERROR_GLCROW_SALE_LOAD_PARAM_NUM,
	EMRINFO_ERROR_GLCROW_SALE_LOAD_INSERT_FAILED_1,
	EMRINFO_ERROR_GLCROW_SALE_LOAD_INSERT_FAILED_2,

	EMRINFO_GM_COMMAND_PASS_FILE_NAME,
	EMRINFO_GM_COMMAND_PASS_ERROR_FILE,

	EMRINFO_PARTY_FINDER_FILE_NAME,
	EMRINFO_PARTY_FINDER_ERROR_FILE,

	EMRINFO_SIZE,
};

namespace RINFO
{
	const TCHAR* getc( EMRINFO emType );
	std::string gets( EMRINFO emType );

	extern std::string m_strInfo[EMRINFO_SIZE];
};

#endif // NSRINFO_H__INCLUDED
